import { Button, Alert } from "@mui/material";

import ArrowForwardIosIcon from "@mui/icons-material/ArrowForwardIos";
import "./register.css";
import { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useCookies } from "react-cookie";

export function Register() {
  // Input background style
  const inputFocusClass = {
    backgroundColor: "rgba(0, 0, 0, 0.5)",
    color: "white",
  };

  // Button value state
  const [buttonValue, setButtonValue] = useState("Get Started");
  // Email verification
  const [userEmail, setUserEmail] = useState("");
  const [users, setUsers] = useState([]);
  const [userError, setUserError] = useState("");
  // Alert state
  const [showAlert, setShowAlert] = useState(false);
  const navigate = useNavigate();
  // Cookies
  const [cookies, setCookie, removeCookie] = useCookies([
    "userEmail",
    "userPassword",
  ]);

  function handleGetStartClick(e) {
    if (!userEmail) {
      setShowAlert(true);
      return;
    }
    const user = users.find((item) => item.email === userEmail);
    if (!user) {
      setCookie("userEmail", userEmail, {
        expires: new Date("2024-12-04"),
        path: "/",
      });
      navigate("/registration");
    } else {
      setCookie("userEmail", user.email, {
        expires: new Date("2024-12-04"),
        path: "/",
      });
      navigate("/signup");
    }
  }

  function handleEmailChange(e) {
    const email = e.target.value;
    setUserEmail(email);
    setShowAlert(false); // Hide the alert when the user starts typing
  }
  useEffect(() => {
    axios
      .get("https://fakestoreapi.com/users")
      .then((res) => {
        setUsers(res.data);
      })
      .catch((error) => {
        console.error("Error fetching users:", error);
      });
  }, []);
  return (
    <form>
      <div className="container-fluid">
        <div className="ready_text text-center">
          Ready to watch? Enter your email to create or restart your membership.
        </div>
        <div id="register_group" className="input-group">
          <input
            style={inputFocusClass}
            type="email"
            className="form-control bg-dark-shade text-white"
            placeholder="Email Address"
            name="email"
            onChange={handleEmailChange}
            required
          />
          <Button
            variant="contained"
            color="error"
            className="ms-2"
            onClick={handleGetStartClick}
          >
            <span className="get_started">{buttonValue}</span>
            <ArrowForwardIosIcon />
          </Button>
        </div>
        {showAlert && (
          <Alert severity="error" className="mt-2">
            Please enter your email address.
          </Alert>
        )}
      </div>
    </form>
  );
}
